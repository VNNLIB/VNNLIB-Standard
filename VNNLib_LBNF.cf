token SDouble '-'? digit+ '.' digit+ ('e' '-'? digit+)? ;
token SInt '-'? digit+ ;
token TensorElement letter+ digit* ('_' digit+ ('-' digit+)*)? ;

TElem. Element ::= TensorElement ;

DParam. Parameter ::= SDouble ;
IParam. Parameter ::= SInt ;

GreaterThan. ComparativeOperator ::= ">" ;
LessThan. ComparativeOperator ::= "<" ;
GreaterEqual. ComparativeOperator ::= ">=" ;
LessEqual. ComparativeOperator ::= "<=" ;
NotEqual. ComparativeOperator ::= "!=" ;
Equal. ComparativeOperator ::= "==" ;

And. Connective ::= "and" ;
Or. Connective ::= "or" ;
Not. Connective ::= "not" ;

Plus. ArithmeticOperator ::= "+" ;
Minus. ArithmeticOperator ::= "-" ;
Multiply. ArithmeticOperator ::= "*" ;

ElemInput. Input ::= Element ;
ParamInput. Input ::= Parameter ;
ArithInput. Input ::= ArithmeticFormula ;

AFormIn1. ArithmeticFormulaInputs ::= Input Input ;
AFormIn2. ArithmeticFormulaInputs ::= ArithmeticFormulaInputs Input ;
AForm3. ArithmeticFormula ::= "(" ArithmeticOperator ArithmeticFormulaInputs ")" ;

CompForm. ComparativeFormula ::= "(" ComparativeOperator Input Input ")" ;

BoolForm1. BooleanFormula ::= ConnectiveFormula ;
BoolForm2. BooleanFormula ::= ComparativeFormula ;
BoolForm3. BooleanFormula ::= BooleanFormula BooleanFormula ;
ConnForm. ConnectiveFormula ::= "(" Connective BooleanFormula ")" ;

Form1. Formula ::= ArithmeticFormula ;
Form2. Formula ::= ComparativeFormula ;
Form3. Formula ::= ConnectiveFormula ;
Form4. Formula ::= Formula "\n" Formula ;

EType. ElementType ::= "Real" ;
CDef. Definition ::= "(" "declare-const" Element ElementType ")" ;
FDef. Definition ::= "(" "declare-fun" Element "()" ElementType ")" ;

Con. Constraint ::= "(" "assert" Formula ")" ;

CommDef. Command ::= Definition ;
CommCon. Command ::= Constraint ;
Coms. Command ::= Command Command ;

comment ";" ;

entrypoints Command;
