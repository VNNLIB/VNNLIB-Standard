entrypoints Command;

token Element letter+ digit* ('_' digit+ ('-' digit+)*)? ;
ElemT. ElementType ::= "Real";

rules Definition ::= "(" "declare-const" Element ElementType ")" | "(" "declare-fun" Element "()" ElementType ")" ;

rules Parameter ::= Integer | "-" Integer | Double | "-" Double;

rules ComparativeOperator ::= "<" | ">" | "<=" | ">=" | "==" | "!=" ;
rules ArithmeticOperator  ::= "+" | "-" | "*";
rules Connective ::= "and" | "or" | "not";

rules Input ::= Element | Parameter;
AFormInBase. ArithmeticFormulaInputs ::= Input Input;
AFormInRecc. ArithmeticFormulaInputs ::= ArithmeticFormulaInputs Input;
AFormBase. ArithmeticFormula ::= "(" ArithmeticOperator ArithmeticFormulaInputs ")";
InpArith. Input ::= ArithmeticFormula;

CompForm. ComparativeFormula ::= "(" ComparativeOperator Input Input ")" ;

rules BooleanFormula ::= ConnectiveFormula | ComparativeFormula | BooleanFormula ComparativeFormula | BooleanFormula ConnectiveFormula ;

ConnForm. ConnectiveFormula ::= "(" Connective BooleanFormula ")" ;

rules Formula ::= ArithmeticFormula | ComparativeFormula | ConnectiveFormula | Formula "\n" ArithmeticFormula | Formula "\n" ComparativeFormula | Formula "\n" ConnectiveFormula ;
Con. Constraint ::= "(" "assert" Formula ")" ;

rules Command ::= Definition | Constraint | Command Constraint | Command Definition ;

comment ";" ;